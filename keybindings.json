// Place your key bindings in this file to override the defaultsauto[]
[
    {
             "key": "ctrl+shift+t",
             "command": "workbench.action.toggleSidebarVisibility"
    },
    {
             "key": "ctrl+b",
             "command": "-workbench.action.toggleSidebarVisibility"
    },
{
             "key": "ctrl+j",
             "command": "cursorDown",
             "when": "textInputFocus"
    },
{
             "key": "ctrl+e",
             "command": "cursorLineEnd"
    },
    {
             "key": "ctrl+alt+a",
             "command": "editor.action.selectAll"
    },
    {
             "key": "ctrl+a",
             "command": "-editor.action.selectAll"
    },
{
             "key": "ctrl+f",
             "command": "-actions.find",
             "when": "editorFocus || editorIsOpen"
    },
    {
             "key": "ctrl+;",
             "command": "editor.action.revealDefinition",
             "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
             "key": "f12",
             "command": "-editor.action.revealDefinition",
             "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
{
             "key": "ctrl+w",
             "command": "-workbench.action.closeActiveEditor"
    },
    {
             "key": "shift+alt+m",
             "command": "workbench.action.moveEditorLeftInGroup"
    },
    {
             "key": "ctrl+shift+pageup",
             "command": "-workbench.action.moveEditorLeftInGroup"
    },
    {
             "key": "shift+alt+.",
             "command": "workbench.action.moveEditorRightInGroup"
    },
    {
             "key": "ctrl+shift+pagedown",
             "command": "-workbench.action.moveEditorRightInGroup"
    },
    {
             "key": "ctrl+shift+d",
             "command": "workbench.action.toggleFullScreen",
             "when": "!isIOS"
    },
    {
             "key": "f11",
             "command": "-workbench.action.toggleFullScreen",
             "when": "!isIOS"
    },
    {
             "key": "ctrl+shift+s",
             "command": "-workbench.action.files.saveAs"
    },
    {
             "key": "ctrl+f",
             "command": "expandLineSelection",
             "when": "textInputFocus"
    },
    {
             "key": "ctrl+l",
             "command": "-expandLineSelection",
             "when": "textInputFocus"
    },
{
             "key": "ctrl+t",
             "command": "editor.action.commentLine",
             "when": "editorTextFocus && !editorReadonly"
    },
    {
             "key": "ctrl+/",
             "command": "-editor.action.commentLine",
             "when": "editorTextFocus && !editorReadonly"
    },
    {
             "key": "alt+s",
             "command": "editor.action.blockComment",
             "when": "editorTextFocus && !editorReadonly"
    },
    {
             "key": "ctrl+shift+a",
             "command": "-editor.action.blockComment",
             "when": "editorTextFocus && !editorReadonly"
    },
    {
             "key": "shift+left",
             "command": "-cursorColumnSelectLeft",
             "when": "editorColumnSelection && textInputFocus"
    },
    {
             "key": "ctrl+shift+h",
             "command": "cursorLeftSelect",
             "when": "textInputFocus"
    },
    {
             "key": "ctrl+shift+l",
             "command": "cursorRightSelect",
             "when": "textInputFocus"
    },
    {
             "key": "ctrl+n",
             "command": "-workbench.action.files.newUntitledFile"
    },
    {
             "key": "ctrl+alt+h",
             "command": "cursorWordLeftSelect",
             "when": "textInputFocus"
    },
    {
             "key": "ctrl+alt+l",
             "command": "cursorWordEndRightSelect",
             "when": "textInputFocus"
    },
    {
             "key": "ctrl+k ctrl+c",
             "command": "-editor.action.addCommentLine",
             "when": "editorTextFocus && !editorReadonly"
    },
    {
             "key": "ctrl+u",
             "command": "editor.action.marker.next",
             "when": "editorFocus"
    },
    {
             "key": "ctrl+alt+u",
             "command": "editor.action.marker.prev",
             "when": "editorFocus"
    },
    {
             "key": "shift+alt+f8",
             "command": "-editor.action.marker.prev",
             "when": "editorFocus"
    },
    {
             "key": "ctrl+r",
             "command": "editor.action.jumpToBracket",
             "when": "editorTextFocus"
    },
    {
             "key": "alt+b",
             "command": "cursorBottom",
             "when": "textInputFocus"
    },
    {
             "key": "ctrl+end",
             "command": "-cursorBottom",
             "when": "textInputFocus"
    },
    {
             "key": "ctrl+home",
             "command": "-cursorTop",
             "when": "textInputFocus"
    },
    {
             "key": "alt+n",
             "command": "cursorTop",
             "when": "textInputFocus"
    },
    {
             "key": "ctrl+a",
             "command": "cursorHome",
             "when": "textInputFocus"
    },
    {
             "key": "home",
             "command": "-cursorHome",
             "when": "textInputFocus"
    },
    {
             "key": "alt+u",
             "command": "cmantic.addDefinitionInSourceFile"
    },
    {
             "key": "alt+h",
             "command": "cmantic.addDefinitionInCurrentFile"
    },
    {
             "key": "ctrl+i",
             "command": "cmantic.switchHeaderSourceInWorkspace"
    },
{
             "key": "ctrl+shift+o",
             "command": "-workbench.action.gotoSymbol"
    },
    {
             "key": "ctrl+'",
             "command": "workbench.action.navigateBack"
    },
    {
             "key": "ctrl+alt+-",
             "command": "-workbench.action.navigateBack"
    },
    {
             "key": "ctrl+y",
             "command": "editor.action.copyLinesDownAction",
             "when": "editorTextFocus && !editorReadonly"
    },
{
             "key": "ctrl+j",
             "command": "selectNextSuggestion",
             "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
{
             "key": "ctrl+; ctrl+e",
             "command": "-testing.debugFailTests"
    },
    {
             "key": "ctrl+; ctrl+l",
             "command": "-testing.debugLastRun"
    },
    {
             "key": "ctrl+; ctrl+c",
             "command": "-testing.debugAtCursor",
             "when": "editorTextFocus"
    },
    {
             "key": "ctrl+; ctrl+f",
             "command": "-testing.debugCurrentFile",
             "when": "editorTextFocus"
    },
    {
             "key": "ctrl+; m",
             "command": "-testing.openOutputPeek"
    },
    {
             "key": "ctrl+; e",
             "command": "-testing.reRunFailTests"
    },
    {
             "key": "ctrl+; l",
             "command": "-testing.reRunLastRun"
    },
    {
             "key": "ctrl+; a",
             "command": "-testing.runAll"
    },
    {
             "key": "ctrl+; c",
             "command": "-testing.runAtCursor",
             "when": "editorTextFocus"
    },
    {
             "key": "ctrl+; f",
             "command": "-testing.runCurrentFile",
             "when": "editorTextFocus"
    },
    {
             "key": "ctrl+; ctrl+o",
             "command": "-testing.showMostRecentOutput",
             "when": "testing.hasAnyResults"
    },
    {
             "key": "ctrl+; ctrl+i",
             "command": "-testing.toggleInlineTestOutput"
    },
    {
             "key": "ctrl+shift+;",
             "command": "-breadcrumbs.focus",
             "when": "breadcrumbsPossible"
    },
    {
             "key": "ctrl+; ctrl+x",
             "command": "-testing.cancelRun"
    },
    {
             "key": "ctrl+; ctrl+a",
             "command": "-testing.debugAll"
    },
    {
             "key": "ctrl+numpad_add",
             "command": "-workbench.action.zoomIn"
    },
    {
             "key": "ctrl+shift+=",
             "command": "-workbench.action.zoomIn"
    },
    {
             "key": "ctrl+=",
             "command": "-workbench.action.zoomIn"
    },
    {
             "key": "ctrl+numpad_subtract",
             "command": "-workbench.action.zoomOut"
    },
    {
             "key": "ctrl+-",
             "command": "-workbench.action.zoomOut"
    },
    {
             "key": "ctrl+k ctrl+left",
             "command": "-workbench.action.focusLeftGroup"
    },
    {
             "key": "alt+m",
             "command": "workbench.action.previousEditor"
    },
    {
             "key": "ctrl+pageup",
             "command": "-workbench.action.previousEditor"
    },
    {
             "key": "alt+.",
             "command": "workbench.action.nextEditor"
    },
    {
             "key": "ctrl+pagedown",
             "command": "-workbench.action.nextEditor"
    },
    {
             "key": "ctrl+shift+r",
             "command": "editor.action.quickFix",
             "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
             "key": "ctrl+shift+s",
             "command": "-workbench.action.files.saveLocalFile",
             "when": "remoteFileDialogVisible"
    },
{
             "key": "ctrl+a",
             "command": "-list.selectAll",
             "when": "listFocus && listSupportsMultiselect && !inputFocus"
    },
    {
             "key": "ctrl+1",
             "command": "workbench.action.openEditorAtIndex1"
    },
    {
             "key": "alt+1",
             "command": "-workbench.action.openEditorAtIndex1"
    },
    {
             "key": "ctrl+2",
             "command": "workbench.action.openEditorAtIndex2"
    },
    {
             "key": "ctrl+3",
             "command": "workbench.action.openEditorAtIndex3"
    },
    {
             "key": "ctrl+4",
             "command": "workbench.action.openEditorAtIndex4"
    },
    {
             "key": "ctrl+5",
             "command": "workbench.action.openEditorAtIndex5"
    },
    {
             "key": "ctrl+6",
             "command": "workbench.action.openEditorAtIndex6"
    },
    {
             "key": "ctrl+2",
             "command": "-workbench.action.focusSecondEditorGroup"
    },
    {
             "key": "ctrl+shift+2",
             "command": "-workbench.action.terminal.sendSequence",
             "when": "terminalFocus"
    },
    {
             "key": "ctrl+k ctrl+2",
             "command": "-editor.foldLevel2",
             "when": "editorTextFocus && foldingEnabled"
    },
    {
             "key": "ctrl+w",
             "command": "-workbench.action.terminal.killEditor",
             "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated && resourceScheme == 'vscode-terminal' || terminalEditorFocus && terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'"
    },
    {
             "key": "ctrl+w",
             "command": "-workbench.action.closeGroup",
             "when": "activeEditorGroupEmpty && multipleEditorGroups"
    },
{
         "key": "ctrl+s",
         "command": "-workbench.action.files.save"
},
{
         "key": "shift+tab",
         "command": "-acceptAlternativeSelectedSuggestion",
         "when": "suggestWidgetVisible && textInputFocus"
},
{
         "key": "shift+tab",
         "command": "-insertPrevSuggestion",
         "when": "hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
},
{
         "key": "shift+tab",
         "command": "-jumpToPrevSnippetPlaceholder",
         "when": "editorTextFocus && hasPrevTabstop && inSnippetMode"
},
{
         "key": "shift+tab",
         "command": "-outdent",
         "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus"
},
{
         "key": "ctrl+shift+tab",
         "command": "-workbench.action.quickOpenNavigatePreviousInEditorPicker",
         "when": "inEditorsPicker && inQuickOpen"
},
{
         "key": "ctrl+k ctrl+n",
         "command": "-git.unstageSelectedRanges",
         "when": "isInDiffEditor"
},
{
         "key": "ctrl+alt+meta+n",
         "command": "-welcome.showNewFileEntries"
},
{
	"key": "ctrl+k ctrl+i",
	"command": "-editor.debug.action.showDebugHover",
	"when": "editorTextFocus && inDebugMode"
},
{
	"key": "ctrl+shift+i",
	"command": "-workbench.action.toggleDevTools",
	"when": "isDevelopment"
},
{
	"key": "ctrl+shift+i",
	"command": "-notebook.formatCell",
	"when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
},
{
	"key": "ctrl+shift+i",
	"command": "-editor.action.formatDocument",
	"when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
},
{
	"key": "ctrl+shift+i",
	"command": "-editor.action.formatDocument.none",
	"when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
},
{
	"key": "ctrl+shift+i",
	"command": "-notebook.format",
	"when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
},
{
	"key": "ctrl+k ctrl+i",
	"command": "-editor.action.showHover",
	"when": "editorTextFocus"
},
{
	"key": "ctrl+i",
	"command": "-editor.action.triggerSuggest",
	"when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
},
{
	"key": "ctrl+i",
	"command": "-toggleSuggestionDetails",
	"when": "suggestWidgetVisible && textInputFocus"
},
{
	"key": "ctrl+k",
	"command": "selectPrevSuggestion",
	"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
},
{
	"key": "ctrl+m",
	"command": "-editor.action.toggleTabFocusMode"
},
{
	"key": "ctrl+h",
	"command": "cursorLeft",
	"when": "textInputFocus"
},
{
	"key": "ctrl+h",
	"command": "-editor.action.startFindReplaceAction",
	"when": "editorFocus || editorIsOpen"
},
{
	"key": "ctrl+shift+h",
	"command": "-workbench.action.replaceInFiles"
},
{
	"key": "ctrl+h",
	"command": "-testing.toggleTestingPeekHistory",
	"when": "testing.isPeekVisible"
},
{
	"key": "ctrl+k ctrl+h",
	"command": "-workbench.action.output.toggleOutput",
	"when": "workbench.panel.output.active"
},
{
	"key": "ctrl+l",
	"command": "-notebook.centerActiveCell",
	"when": "notebookEditorFocused"
},
{
	"key": "ctrl+shift+l",
	"command": "-selectAllSearchEditorMatches",
	"when": "inSearchEditor"
},
{
	"key": "ctrl+shift+l",
	"command": "-editor.action.selectHighlights",
	"when": "editorFocus"
},
{
	"key": "ctrl+k ctrl+l",
	"command": "-editor.toggleFold",
	"when": "editorTextFocus && foldingEnabled"
},
{
	"key": "ctrl+shift+l",
	"command": "-addCursorsAtSearchResults",
	"when": "fileMatchOrMatchFocus && searchViewletVisible"
},
{
	"key": "ctrl+l",
	"command": "cursorRight",
	"when": "textInputFocus"
},
{
	"key": "ctrl+alt+j",
	"command": "editor.action.moveLinesDownAction",
	"when": "editorTextFocus && !editorReadonly"
},
{
	"key": "alt+down",
	"command": "-editor.action.moveLinesDownAction",
	"when": "editorTextFocus && !editorReadonly"
},
{
	"key": "up",
	"command": "-cursorUp",
	"when": "textInputFocus"
},
{
	"key": "ctrl+up",
	"command": "-selectPrevSuggestion",
	"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
},
{
	"key": "up",
	"command": "-selectPrevSuggestion",
	"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
},
{
	"key": "ctrl+k m",
	"command": "-workbench.action.editor.changeLanguageMode",
	"when": "!notebookEditorFocused"
},
{
	"key": "ctrl+shift+k",
	"command": "-editor.action.deleteLines",
	"when": "textInputFocus && !editorReadonly"
},
{
	"key": "ctrl+k e",
	"command": "-workbench.files.action.focusOpenEditorsView",
	"when": "workbench.explorer.openEditorsView.active"
},
{
	"key": "ctrl+k c",
	"command": "-workbench.files.action.compareWithClipboard"
},
{
	"key": "ctrl+k d",
	"command": "-workbench.files.action.compareWithSaved"
},
{
	"key": "ctrl+k o",
	"command": "-workbench.action.files.showOpenedFileInNewWindow",
	"when": "emptyWorkspaceSupport"
},
{
	"key": "ctrl+k ctrl+o",
	"command": "-workbench.action.files.openFolder",
	"when": "openFolderWorkspaceSupport"
},
{
	"key": "ctrl+k s",
	"command": "-workbench.action.files.saveWithoutFormatting"
},
{
	"key": "ctrl+k ctrl+0",
	"command": "-editor.foldAll",
	"when": "editorTextFocus && foldingEnabled"
},
{
	"key": "ctrl+k ctrl+/",
	"command": "-editor.foldAllBlockComments",
	"when": "editorTextFocus && foldingEnabled"
},
{
	"key": "ctrl+k ctrl+8",
	"command": "-editor.foldAllMarkerRegions",
	"when": "editorTextFocus && foldingEnabled"
},
{
	"key": "ctrl+k ctrl+-",
	"command": "-editor.foldAllExcept",
	"when": "editorTextFocus && foldingEnabled"
},
{
	"key": "ctrl+k ctrl+1",
	"command": "-editor.foldLevel1",
	"when": "editorTextFocus && foldingEnabled"
},
{
	"key": "ctrl+k ctrl+3",
	"command": "-editor.foldLevel3",
	"when": "editorTextFocus && foldingEnabled"
},
{
	"key": "ctrl+k ctrl+4",
	"command": "-editor.foldLevel4",
	"when": "editorTextFocus && foldingEnabled"
},
{
	"key": "ctrl+k ctrl+5",
	"command": "-editor.foldLevel5",
	"when": "editorTextFocus && foldingEnabled"
},
{
	"key": "ctrl+k ctrl+6",
	"command": "-editor.foldLevel6",
	"when": "editorTextFocus && foldingEnabled"
},
{
	"key": "ctrl+k ctrl+7",
	"command": "-editor.foldLevel7",
	"when": "editorTextFocus && foldingEnabled"
},
{
	"key": "ctrl+k ctrl+[",
	"command": "-editor.foldRecursively",
	"when": "editorTextFocus && foldingEnabled"
},
{
	"key": "ctrl+k ctrl+f",
	"command": "-editor.action.formatSelection",
	"when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
},
{
	"key": "ctrl+k ctrl+r",
	"command": "-git.revertSelectedRanges",
	"when": "isInDiffEditor"
},
{
	"key": "ctrl+k ctrl+alt+s",
	"command": "-git.stageSelectedRanges",
	"when": "isInDiffEditor"
},
{
	"key": "ctrl+k ctrl+q",
	"command": "-workbench.action.navigateToLastEditLocation"
},
{
	"key": "ctrl+k ctrl+r",
	"command": "-workbench.action.keybindingsReference"
},
{
	"key": "ctrl+k v",
	"command": "-markdown.showPreviewToSide",
	"when": "!notebookEditorFocused && editorLangId == 'markdown'"
},
{
	"key": "ctrl+k ctrl+d",
	"command": "-editor.action.moveSelectionToNextFindMatch",
	"when": "editorFocus"
},
{
	"key": "ctrl+k ctrl+c",
	"command": "-notebook.cell.collapseCellInput",
	"when": "notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed"
},
{
	"key": "ctrl+k t",
	"command": "-notebook.cell.collapseCellOutput",
	"when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed"
},
{
	"key": "ctrl+k ctrl+c",
	"command": "-notebook.cell.expandCellInput",
	"when": "notebookCellInputIsCollapsed && notebookCellListFocused"
},
{
	"key": "ctrl+k t",
	"command": "-notebook.cell.expandCellOutput",
	"when": "notebookCellListFocused && notebookCellOutputIsCollapsed"
},
{
	"key": "ctrl+k ctrl+t",
	"command": "-workbench.action.selectTheme"
},
{
	"key": "ctrl+k ctrl+s",
	"command": "-workbench.action.openGlobalKeybindings"
},
{
	"key": "ctrl+k ctrl+u",
	"command": "-editor.action.removeCommentLine",
	"when": "editorTextFocus && !editorReadonly"
},
{
	"key": "ctrl+k ctrl+k",
	"command": "-editor.action.selectFromAnchorToCursor",
	"when": "editorTextFocus && selectionAnchorSet"
},
{
	"key": "ctrl+k ctrl+b",
	"command": "-editor.action.setSelectionAnchor",
	"when": "editorTextFocus"
},
{
	"key": "ctrl+k ctrl+x",
	"command": "-editor.action.trimTrailingWhitespace",
	"when": "editorTextFocus && !editorReadonly"
},
{
	"key": "ctrl+k ctrl+j",
	"command": "-editor.unfoldAll",
	"when": "editorTextFocus && foldingEnabled"
},
{
	"key": "ctrl+k ctrl+9",
	"command": "-editor.unfoldAllMarkerRegions",
	"when": "editorTextFocus && foldingEnabled"
},
{
	"key": "ctrl+k ctrl+=",
	"command": "-editor.unfoldAllExcept",
	"when": "editorTextFocus && foldingEnabled"
},
{
	"key": "ctrl+k ctrl+]",
	"command": "-editor.unfoldRecursively",
	"when": "editorTextFocus && foldingEnabled"
},
{
	"key": "ctrl+k ctrl+shift+w",
	"command": "-workbench.action.closeAllGroups"
},
{
	"key": "ctrl+k ctrl+w",
	"command": "-workbench.action.closeAllEditors"
},
{
	"key": "ctrl+k w",
	"command": "-workbench.action.closeEditorsInGroup"
},
{
	"key": "ctrl+k u",
	"command": "-workbench.action.closeUnmodifiedEditors"
},
{
	"key": "ctrl+k ctrl+up",
	"command": "-workbench.action.focusAboveGroup"
},
{
	"key": "ctrl+k ctrl+down",
	"command": "-workbench.action.focusBelowGroup"
},
{
	"key": "ctrl+k ctrl+right",
	"command": "-workbench.action.focusRightGroup"
},
{
	"key": "ctrl+k ctrl+shift+\\",
	"command": "-workbench.action.joinEditorInGroup",
	"when": "sideBySideEditorActive"
},
{
	"key": "ctrl+k enter",
	"command": "-workbench.action.keepEditor"
},
{
	"key": "ctrl+k down",
	"command": "-workbench.action.moveActiveEditorGroupDown"
},
{
	"key": "ctrl+k left",
	"command": "-workbench.action.moveActiveEditorGroupLeft"
},
{
	"key": "ctrl+k right",
	"command": "-workbench.action.moveActiveEditorGroupRight"
},
{
	"key": "ctrl+k up",
	"command": "-workbench.action.moveActiveEditorGroupUp"
},
{
	"key": "ctrl+k ctrl+pagedown",
	"command": "-workbench.action.nextEditorInGroup"
},
{
	"key": "ctrl+k ctrl+pageup",
	"command": "-workbench.action.previousEditorInGroup"
},
{
	"key": "ctrl+k shift+enter",
	"command": "-workbench.action.pinEditor",
	"when": "!activeEditorIsPinned"
},
{
	"key": "ctrl+k ctrl+p",
	"command": "-workbench.action.showAllEditors"
},
{
	"key": "ctrl+k ctrl+shift+\\",
	"command": "-workbench.action.splitEditorInGroup",
	"when": "activeEditorCanSplitInGroup"
},
{
	"key": "ctrl+k ctrl+\\",
	"command": "-workbench.action.splitEditorOrthogonal"
},
{
	"key": "ctrl+k z",
	"command": "-workbench.action.toggleZenMode"
},
{
	"key": "ctrl+k shift+enter",
	"command": "-workbench.action.unpinEditor",
	"when": "activeEditorIsPinned"
},
{
	"key": "ctrl+k f",
	"command": "-workbench.action.closeFolder",
	"when": "emptyWorkspaceSupport && workbenchState != 'empty'"
},
{
	"key": "ctrl+k ctrl+k",
	"command": "-editor.action.defineKeybinding",
	"when": "editorTextFocus && !editorReadonly && editorLangId == 'jsonc'"
},
{
	"key": "ctrl+k ctrl+a",
	"command": "-keybindings.editor.addKeybinding",
	"when": "inKeybindings && keybindingFocus"
},
{
	"key": "ctrl+k ctrl+e",
	"command": "-keybindings.editor.defineWhenExpression",
	"when": "inKeybindings && keybindingFocus"
},
{
	"key": "ctrl+k f2",
	"command": "-togglePeekWidgetFocus",
	"when": "inReferenceSearchEditor || referenceSearchVisible"
},
{
	"key": "ctrl+k down",
	"command": "-views.moveViewDown",
	"when": "focusedView != ''"
},
{
	"key": "ctrl+k left",
	"command": "-views.moveViewLeft",
	"when": "focusedView != ''"
},
{
	"key": "ctrl+k right",
	"command": "-views.moveViewRight",
	"when": "focusedView != ''"
},
{
	"key": "ctrl+k up",
	"command": "-views.moveViewUp",
	"when": "focusedView != ''"
},
{
	"key": "ctrl+k p",
	"command": "-workbench.action.files.copyPathOfActiveFile"
},
{
	"key": "ctrl+k ctrl+o",
	"command": "-workbench.action.files.openLocalFolder",
	"when": "remoteFileDialogVisible"
},
{
	"key": "ctrl+k r",
	"command": "-workbench.action.files.revealActiveFileInWindows"
},
{
	"key": "ctrl+j",
	"command": "-workbench.action.togglePanel"
},
{
	"key": "ctrl+shift+j",
	"command": "-workbench.action.search.toggleQueryDetails",
	"when": "inSearchEditor || searchViewletFocus"
},
{
	"key": "ctrl+k",
	"command": "cursorUp",
	"when": "textInputFocus && !suggestWidgetVisible"
},
{
	"key": "alt+1",
	"command": "workbench.action.focusFirstEditorGroup"
},
{
	"key": "alt+2",
	"command": "workbench.action.openEditorAtIndex2"
},
{
	"key": "alt+1",
	"command": "workbench.action.openEditorAtIndex1"
},
{
	"key": "alt+4",
	"command": "workbench.action.openEditorAtIndex4"
},
{
	"key": "alt+5",
	"command": "workbench.action.openEditorAtIndex5"
},
{
	"key": "ctrl+q",
	"command": "-workbench.action.quit"
},
{
	"key": "ctrl+n",
	"command": "workbench.action.gotoLine"
},
{
	"key": "ctrl+g",
	"command": "-workbench.action.gotoLine"
},
{
	"key": "ctrl+shift+g",
	"command": "editor.action.smartSelect.shrink",
	"when": "editorTextFocus"
},
{
	"key": "shift+alt+left",
	"command": "-editor.action.smartSelect.shrink",
	"when": "editorTextFocus"
},
{
	"key": "ctrl+shift+g",
	"command": "-workbench.view.scm",
	"when": "workbench.scm.active"
},
{
	"key": "ctrl+m",
	"command": "cursorPageDown",
	"when": "textInputFocus"
},
{
	"key": "pagedown",
	"command": "-cursorPageDown",
	"when": "textInputFocus"
},
{
	"key": "ctrl+b",
	"command": "cursorPageUp",
	"when": "textInputFocus"
},
{
	"key": "ctrl+g",
	"command": "actions.find"
},
{
	"key": "alt+w",
	"command": "workbench.action.closeActiveEditor"
},
{
	"key": "ctrl+o",
	"command": "-workbench.action.files.openFile",
	"when": "true"
},
{
	"key": "ctrl+alt+k",
	"command": "editor.action.moveLinesUpAction",
	"when": "editorTextFocus && !editorReadonly"
},
{
	"key": "ctrl+w",
	"command": "workbench.action.closeActiveEditor"
},
{
	"key": "ctrl+pageup",
	"command": "-selectPrevPageSuggestion",
	"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
},
{
	"key": "pageup",
	"command": "-selectPrevPageSuggestion",
	"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
},
{
	"key": "alt+z",
	"command": "redo"
},
{
	"key": "ctrl+shift+z",
	"command": "-redo"
},
{
	"key": "ctrl+shift+alt+down",
	"command": "-editor.action.copyLinesDownAction",
	"when": "editorTextFocus && !editorReadonly"
},
{
	"key": "ctrl+s",
	"command": "workbench.action.files.save"
},
{
	"key": "tab",
	"command": "editor.action.indentLines",
	"when": "editorTextFocus && !editorReadonly"
},
{
	"key": "tab",
	"command": "-editor.emmet.action.expandAbbreviation",
	"when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
},
{
	"key": "tab",
	"command": "-tab",
	"when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus"
},
{
	"key": "tab",
	"command": "-jumpToNextSnippetPlaceholder",
	"when": "editorTextFocus && hasNextTabstop && inSnippetMode"
},
{
	"key": "tab",
	"command": "-insertSnippet",
	"when": "editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode"
},
{
	"key": "tab",
	"command": "-insertNextSuggestion",
	"when": "hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
},
{
	"key": "tab",
	"command": "-insertBestCompletion",
	"when": "atEndOfWord && textInputFocus && !hasOtherSuggestions && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
},
{
	"key": "tab",
	"command": "-editor.action.inlineSuggest.commit",
	"when": "inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorTabMovesFocus"
},
{
	"key": "tab",
	"command": "-acceptSelectedSuggestion",
	"when": "suggestWidgetVisible && textInputFocus"
},
{
	"key": "ctrl+tab",
	"command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
	"when": "!activeEditorGroupEmpty"
},
{
	"key": "ctrl+tab",
	"command": "-workbench.action.quickOpenNavigateNextInEditorPicker",
	"when": "inEditorsPicker && inQuickOpen"
},
{
	"key": "ctrl+shift+tab",
	"command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup",
	"when": "!activeEditorGroupEmpty"
},
{
	"key": "ctrl+shift+m",
	"command": "-workbench.actions.view.problems",
	"when": "workbench.panel.markers.view.active"
},
{
	"key": "alt+p",
	"command": "-togglePreserveCase",
	"when": "editorFocus"
},
{
	"key": "alt+p",
	"command": "-toggleSearchPreserveCase",
	"when": "searchViewletFocus"
},
{
	"key": "alt+p",
	"command": "-keybindings.editor.toggleSortByPrecedence",
	"when": "inKeybindings"
},
{
	"key": "ctrl+k f12",
	"command": "-editor.action.revealDefinitionAside",
	"when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
},
{
	"key": "ctrl+u",
	"command": "-cursorUndo",
	"when": "textInputFocus"
},
{
	"key": "ctrl+o",
	"command": "-workbench.action.files.openFileFolder",
	"when": "isMacNative && openFolderWorkspaceSupport"
},
{
	"key": "ctrl+o",
	"command": "-workbench.action.files.openLocalFile",
	"when": "remoteFileDialogVisible"
},
{
	"key": "ctrl+r",
	"command": "-workbench.action.openRecent"
},
{
	"key": "ctrl+alt+o",
	"command": "workbench.action.files.openFileFolder"
},
{
	"key": "alt+i",
	"command": "cmantic.addInclude"
}
]
